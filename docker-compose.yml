version: '3.7'

networks:
  transcendence: {}

services:
  server:
    image: nginx-trans
    build:
      context: ./nginx
      target: dev
    container_name: transcendence-server
    restart: always
    depends_on:
      - frontend
    volumes:
      - './nginx/conf.d:/etc/nginx/conf.d'
    ports:
      - '4443:443'
    networks:
      - transcendence

  frontend:
    image: frontend
    container_name: transcendence-frontend
    restart: always
    build:
      context: ./frontend
      target: dev
      args:
        - "UID=${UID:-1000}"
        - "GID=${GID:-1000}"
    depends_on:
      - backend
    env_file:
      - ./env/.frontend.env
    volumes:
      - './frontend:/app'
      - 'frontend_modules:/app/node_modules'
    expose:
      - '8000'
    networks:
      - transcendence

  backend:
    image: backend
    container_name: transcendence-backend
    restart: always
    build:
      context: ./backend
      target: dev
      args:
        - "UID=${UID:-1000}"
        - "GID=${GID:-1000}"
    depends_on:
      - db
    env_file:
      - ./env/.backend.env
    volumes:
      - './backend:/server'
      - 'backend_modules:/server/node_modules'
    expose:
      - '3080'
    networks:
      - transcendence

  adminer:
    image: adminer
    container_name: transcendence-adminer
    restart: always
    ports:
      - '8080:8080'
    networks:
      - transcendence

  db:
    image: postgres:15.1-alpine
    container_name: transcendence-db
    restart: always
    env_file:
      - ./env/.postgres_env
    volumes:
      - 'data:/var/lib/postgresql/data'
    ports:
      - '5432:5432'
    networks:
      - transcendence

volumes:
  data:
  frontend_modules:
  backend_modules:
