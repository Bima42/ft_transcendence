server {
    listen 80;
    listen 443 ssl;
    server_name localhost;
    root /var/www/html;

    ssl_certificate /etc/nginx/ssl/certs/${VITE_APP_URL}.crt;
    ssl_certificate_key /etc/nginx/ssl/private/${VITE_APP_URL}.key;
    ssl_protocols TLSv1.2 TLSv1.3;

    index index.html;
    charset utf-8;
    error_log /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
    client_max_body_size 100M;

    # Route requests to Vue.js application on port 80
    location / {
        add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        proxy_cache off;
        proxy_pass http://frontend:80;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;
    }

    # Route requests to Nest.js application on port 3080
    location /api {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        proxy_cache off;
        proxy_pass http://backend:3080;
        proxy_set_header Host $host;
        proxy_http_version 1.1;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

#     Serve static files directly
#     location /static/ {
#         alias /var/www/html/static/;
#         gzip_static on;
#         expires max;
#         add_header Cache-Control public;
#     }

    # Handle errors
    error_page 404 /404.html;
    location = /404.html {
        internal;
    }
}
